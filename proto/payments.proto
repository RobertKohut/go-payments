syntax = "proto3";

package payments;

option go_package = "github.com/robertkohut/go-payments/proto/payments";

message Customer {
  int64 id = 1 [json_name = "-"];
  string id_str = 2 [json_name = "id"];
  string name = 3;
  int64 gateway_id = 4;
  int64 source_id = 5;
  int64 account_id = 6;
  string ext_id = 7;
  repeated Card cards = 8;
  int64 primary_card_id = 9;
  int64 flags = 10;
}

message Card {
  int64 id = 1 [json_name = "-"];
  string id_str = 2 [json_name = "id"];
  string ext_id = 3;
  string brand = 4;
  string last4 = 5;
  uint32 exp_month = 6;
  uint32 exp_year = 7;
}

message Charge {
  int64 id = 1 [json_name = "-"];
  string id_str = 2 [json_name = "id"];
  string ext_id = 3;
  int64 gateway_id = 4;
  int64 customer_id = 5;
  string pm_type = 6;
  int64 pm_id = 7;
  int64 amount = 8;
  string currency = 9;
  int64 currency_id = 10;
  string description = 11;
  string status = 12;
  int64 created_at = 13;
  int64 flags = 14;
}

service PaymentService {
  rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse) {}
  rpc GetCustomerById(GetCustomerByIdRequest) returns (GetCustomerByIdResponse) {}

  rpc AddCustomerPaymentMethod(AddCustomerPaymentMethodRequest) returns (AddCustomerPaymentMethodResponse) {}
  rpc RemoveCustomerPaymentMethod(RemoveCustomerPaymentMethodRequest) returns (RemoveCustomerPaymentMethodResponse) {}
	rpc SetCustomerPrimaryPaymentMethod(SetCustomerPrimaryPaymentMethodRequest) returns (SetCustomerPrimaryPaymentMethodResponse) {}

  rpc CreateCharge(CreateChargeRequest) returns (CreateChargeResponse) {}

  // Invoices
//  rpc CreateInvoice(CreateInvoiceRequest) returns (CreateInvoiceResponse);
//  rpc GetInvoiceById(GetInvoiceByIdRequest) returns (GetInvoiceByIdResponse);
//  rpc GetInvoicesByCustomerId(GetInvoicesByCustomerIdRequest) returns (GetInvoicesByCustomerIdResponse);
}

message CreateCustomerRequest {
  int64 source_id = 1;
  int64 org_id = 2;
  int64 account_id = 3;
  string name = 4;
}

message CreateCustomerResponse {
  Customer customer = 1;
}

message GetCustomerByIdRequest {
  int64 source_id = 1;
  int64 account_id = 2;
}

message GetCustomerByIdResponse {
  Customer customer = 1;
}

message AddCustomerPaymentMethodRequest {
  int64 source_id = 1;
  int64 account_id = 2;
  Card card = 3;
}

message AddCustomerPaymentMethodResponse {
  bool success = 1;
  Card card = 2;
}

message RemoveCustomerPaymentMethodRequest {
  int64 source_id = 1;
  int64 account_id = 2;
  int64 card_id = 3;
}

message RemoveCustomerPaymentMethodResponse {
  bool success = 1;
}

message SetCustomerPrimaryPaymentMethodRequest {
	int64 source_id = 1;
	int64 account_id = 2;
	int64 card_id = 3;
}

message SetCustomerPrimaryPaymentMethodResponse {
	bool success = 1;
}

message CreateChargeRequest {
  int64 source_id = 1;
  int64 account_id = 2;
  int64 invoice_id = 3; // Optional: The invoice ID to associate with this charge.
  Charge charge = 4;
}

message CreateChargeResponse {
  Charge charge = 1;
}
